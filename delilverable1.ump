generate Java;

class MainActivity
{
    private EditText user;
  
    private EditText passward;
  
    private FirebaseAuth mAuth;
  
    FirebaseDatabase mDatabase;
  
    DatabaseReference mReference;
  
  1 -- * User;
  1 -- * Second;


  1 -- 1 welcomeemployee;
  1 -- 1 WelcomePatients;
  1 -- 1 welcomeadmin;
private FirebaseUser mUser;
  
  
    public User currentUser;
  
    public static String currentusername;
  
protected void onCreate(Bundle saveInstanceState) {
        super.onCreate(saveInstanceState);
        setContentView(R.layout.activity_main);
        mAuth = FirebaseAuth.getInstance();
        mDatabase = FirebaseDatabase.getInstance();
        user = (EditText) findViewById(R.id.fieldEmail);
        passward = (EditText) findViewById(R.id.fieldPassword);
    }

    public void openRegister() {
        Intent intent = new Intent(getApplicationContext(), Second.class);
        startActivity(intent);
    }
 

    public void openAdmin() {
        Intent intent = new Intent(getApplicationContext(), welcomeadmin.class);
        startActivity(intent);
    }
    public void openEmployee() {
        Intent intent = new Intent(getApplicationContext(), welcomeemployee.class);
        startActivity(intent);
    }
    public void openpatient() {
        Intent intent = new Intent(getApplicationContext(), WelcomePatients.class);
        startActivity(intent);
    }

    public void activity_logIn(View view) {
        
        if (Passward.equals("") || username.equals("")) {
            Toast.makeText(MainActivity.this, "Email or Password is empty", Toast.LENGTH_LONG).show();
        } else {
            mAuth.signInWithEmailAndPassword(username, Passward)

                    .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {

                        @Override

                        public void onComplete(@NonNull Task<AuthResult> task) {

                            if (task.isSuccessful()) {
                                mAuth = FirebaseAuth.getInstance();
                                mUser = mAuth.getCurrentUser();
                                mReference = FirebaseDatabase.getInstance().getReference();
                                mReference.child("Users")
                                        .child(mUser.getUid())
                                        .addListenerForSingleValueEvent(new ValueEventListener() {
                                            @Override
                                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                                String status=(String)dataSnapshot.child("status").getValue();
                                                currentusername = (String) dataSnapshot.child("username").getValue();
                                                if (status.equals("Admin")) {//using email:admin@admin.ca password is given by prof
                                                    openAdmin();
                                                }
                                                 else if (status.equals("Employee")) {
                                                     openEmployee();//Should create an activity Welcome Emploee here
                                                }
                                                else{
                                                    openpatient();//Should create an activity Welcome Patient here
                                                }
                                            }

                                            @Override
                                            public void onCancelled(@NonNull DatabaseError databaseError) {

                                            }
                                        });
                            } else {
                                Toast.makeText(MainActivity.this, "Authentication failed :(", Toast.LENGTH_LONG).show();
                            }
                        }
                    });
        }
    }

    public void activity_signUp(View v) {
        openRegister();}
  
}



class WelcomePatients{


private TextView UserNameTextView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_welcome_patients);
        UserNameTextView=(TextView)findViewById(R.id.name);
        UserNameTextView.setText(MainActivity.currentusername);
    }
}


class welcomeadmin{

private TextView UserNameTextView;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_welcomeadmin);

        //edit

    }


}


class welcomeemployee{
    private TextView UserNameTextView;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_welcomeemployee);
        UserNameTextView=(TextView)findViewById(R.id.name);
        UserNameTextView.setText(MainActivity.currentusername);
        //edit

    }
}



class Second{
    private EditText email;
  
    private EditText passward;
  
    private FirebaseAuth mAuth;
  
    private static final String TAG = "Second";
  
    FirebaseDatabase mDatabase;
  
    1 -- 1 User;
  
  
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_second);
        mAuth = FirebaseAuth.getInstance();
        mDatabase = FirebaseDatabase.getInstance();
    }
    public void back() {
        Intent register = new Intent(getApplicationContext(), MainActivity.class);
        startActivity(register);
    }
    public String getUserEmail() {
        EditText et1 = (EditText) findViewById(R.id.email);
        String email = et1.getText().toString();
        return email;
    }

        public String getUserPass() {
       EditText et2 = (EditText) findViewById(R.id.password);
        String password = et2.getText().toString();
        return password;
    }

    public String getUsername() {
        EditText et1 = (EditText) findViewById(R.id.username);
        String email = et1.getText().toString();
        return email;
    }

    public String getStatus() {

        RadioGroup status = (RadioGroup) findViewById(R.id.statusSelect);
        int pos = status.getCheckedRadioButtonId();
        int b =R.id.check_employee;
        int c =R.id.check_patients;
        if(pos==b){
            return "Employee";
        }else if(pos==c){
            return "Patients";
        }
        return "Empty";
    }
    public String getGender() {
        RadioGroup status = (RadioGroup) findViewById(R.id.genderSelect);
        int pos = status.getCheckedRadioButtonId();
        int b =R.id.check_male;
        int c =R.id.check_female;
        if(pos==b){
            return "male";
        }else if(pos==c){
            return "female";
        }
        return "Empty";
    }

    public void openAdmin() {
        Intent intent = new Intent(getApplicationContext(), welcomeadmin.class);
        startActivity(intent);
    }
    public  static   boolean   test(String   s)
    { char   c   =   s.charAt(0);
        int   i   =(int)c;
        if((i>=65&&i<=90)||(i>=97&&i<=122))
        { return   true;
        }
        else
        { return   false;
        }
    }


    public void Onclick_signUp(View v) {
        String email = getUserEmail();
        String passward = getUserPass();
        String username = getUsername();
        String status = getStatus();
        String gender = getGender();
        if (status.equals("Empty")) {
            Toast.makeText(Second.this, "Status Should be selected", Toast.LENGTH_LONG).show();
        }else if(test(username)==false){
            Toast.makeText(Second.this, "Correct user name should be input", Toast.LENGTH_LONG).show();
        }else if (email.equals("")) {
            Toast.makeText(Second.this, "Email/Password is empty", Toast.LENGTH_LONG).show();
        } else if (!(Patterns.EMAIL_ADDRESS.matcher(email).matches())) {
            Toast.makeText(Second.this, "Email is invalid", Toast.LENGTH_LONG).show();
        } else if (passward.equals("")) {
            Toast.makeText(Second.this, "Email/Password is empty", Toast.LENGTH_LONG).show();
        } else if (username.equals("")) {
            Toast.makeText(Second.this, "Username is empty", Toast.LENGTH_LONG).show();
        } else if (gender.equals("Empty")) {
            Toast.makeText(Second.this, "Gender should be selected", Toast.LENGTH_LONG).show();
        } else {
            final User result  = new User(gender, username, status);
            mAuth.createUserWithEmailAndPassword(email, passward).addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
                @Override
                public void onComplete(@NonNull Task<AuthResult> task) {
                    if (task.isSuccessful()) {

                        mDatabase.getReference("Users")
                                .child(mAuth.getCurrentUser().getUid()).setValue(result);
                        back();
                    } else {
                        Toast.makeText(Second.this, "Database Error:(  Check if your email has been used or try again later", Toast.LENGTH_LONG).show();
                    }


                }
            });
        }
    }
  
  
}



class User{

  String Gender;
  String Status;
  String Username;
  
  
      public User(String Gender, String Username, String Status) {
        this.Gender=Gender;
        this.Username = Username;
        this.Status = status;
    }
  
  public User(){}
  
   public String getuserName() {
      return Username;
      }

   public void setuserName(String username){
        this.Username=username;
   }
  
   public String getstatus() {
        return Status;
    }

    public void setsatus(String status){
        this.Status=status;
    }

    public void setgender(String Gender){
        this.Gender=Gender;
    }

    public String getgender(){
        return this.Gender;
    }
  
  
  
}

//$?[End_of_model]$?

namespace -;


class MainActivity
{
  position 223 198 243 216;
  position.association MainActivity__User 243,78 0,77;
  position.association MainActivity__Second 207,214 89,0;
  position.association MainActivity__Welcomeadmin 237,0 2,78;
  position.association MainActivity__welcomeadmin 45,0 134,78;
  position.association MainActivity__welcomeemployee 64,0 61,78;
  position.association MainActivity__WelcomePatients 244,26 0,41;
  position.association MainActivity__welcomeadmin 102,0 82,78;
  position.association MainActivity__welcomeemployee 1,0 131,78;
  position.association MainActivity__WelcomePatients 234,0 42,78;
  position.association MainActivity__welcomeadmin 139,0 120,78;
}

class Second
{
  position 448 491 233 250;
  position.association Second__User 234,0 0,95;
}

class User
{
  position 752 246 297 163;
}

class WelcomePatients
{
  position 631 7 184 78;
  position.association WelcomePatients__welcomeadmin 0,69 184,9;
}

class welcomeadmin
{
  position 35 48 196 78;
  position.association welcomeadmin__welcomeemployee 0,7 184,66;
}

class welcomeemployee
{
  position 390 21 184 78;
}